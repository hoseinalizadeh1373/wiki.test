"use strict";(self.webpackChunkuimotelndefined=self.webpackChunkuimotelndefined||[]).push([[7805],{4438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"pbx/advance-settings/create_ami_user","title":"Creating an AMI Account","description":"To create AMI access in the Simotel Call Center, you need shell access to Linux. First, open the following file using the nano text editor:","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/pbx/4-advance-settings/4-create_ami_user.md","sourceDirName":"pbx/4-advance-settings","slug":"/pbx/advance-settings/create_ami_user","permalink":"/wiki.test/pbx/advance-settings/create_ami_user","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"Docs","previous":{"title":"Settings for simotel.ini","permalink":"/wiki.test/pbx/advance-settings/simotel.ini"},"next":{"title":"Introduction to Matching Patterns","permalink":"/wiki.test/pbx/advance-settings/matchpattern"}}');var r=n(4848),a=n(8453);const i={title:void 0},c="Creating an AMI Account",o={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"creating-an-ami-account",children:"Creating an AMI Account"})}),"\n",(0,r.jsx)(t.p,{children:"To create AMI access in the Simotel Call Center, you need shell access to Linux. First, open the following file using the nano text editor:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"root@simotel:~# nano /etc/asterisk/manager.conf\n"})}),"\n",(0,r.jsx)(t.p,{children:"At the end of the file, enter your account username and password information according to the template below:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"[ami_user_test]         ; Account username\r\nsecret = testpassword   ; Account password\r\ndeny = 0.0.0.0/0.0.0.0  ; Deny access\r\npermit = 127.0.0.1/255.255.255.255  ; Allowed IP access\r\nread = call,user,agent,cdr   ; Read permissions for the account\r\nwrite = system,call,agent,originate   ; Write permissions for the account\n"})}),"\n",(0,r.jsx)(t.p,{children:"Note that to read information or make changes to the system using AMI, the user account must have the appropriate access level. Below is a complete list of access levels:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"read = system,call,log,verbose,agent,user,config,dtmf,reporting,cdr,dialplan\r\nwrite = system,call,agent,user,config,command,reporting,originate,message\n"})}),"\n",(0,r.jsx)(t.p,{children:"Finally, restart the Asterisk service with the following command to activate the user account. Note that restarting Asterisk will disconnect current calls in the Call Center."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"root@simotel:~# service asterisk restart\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(6540);const r={},a=s.createContext(r);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);